
opcode cue,i,i[]iii
  idurs[],istart,im,is xin
  
  iy = idurs[istart]
  if (im<is+iy) then
   iout = istart
  else 
   iout = cue(idurs,istart+1,im,is+iy)
  endif
  xout iout
endop

opcode cue,i,i[]ii
  idurs[],isum,im xin 
  
  if (im >= isum) then
    iout = cue(idurs, isum, im-isum)
  else
    iout = cue(idurs, 0, im, 0)
  endif
  xout iout
endop 

opcode cue,i,i[]i
  idurs[], idelay xin 
  
  idx = 0
  isum = 0
  while (idx < lenarray(idurs)) do
    isum += idurs[idx]
    idx += 1
  od
 
  xout cue(idurs, isum, (now_tick()-1-idelay)%isum)
endop 

opcode cue,i,i[]
  idurs[] xin 
  xout cue(idurs, 0)
endop

opcode nthbit,i,ii
  ip,inth xin 
  
  i0 = ip % 2
  if (inth == 0) goto done
  
  loop:
  	ip = (ip - i0) / 2
  	i0 = ip % 2
  	inth -= 1
  if (inth != 0) goto loop

  done:
  	xout i0 
endop 

opcode cue,ii,i[]i[]
  ireps[],istems[] xin 
  
  istem = -1
  indx = cue(ireps)
  
  loop:
  	istem += 1
  	if cue(ireps, istem) == indx goto loop

  xout indx, nthbit(istems[indx],istem-1)
endop
 