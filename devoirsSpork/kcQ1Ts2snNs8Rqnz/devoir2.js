// Generated by purs bundle 0.13.4
var PS = {};
(function($PS) {
  // Generated by purs version 0.13.4
  "use strict";
  $PS["Control.Apply"] = $PS["Control.Apply"] || {};
  var exports = $PS["Control.Apply"];                    
  var Apply = function (Functor0, apply) {
      this.Functor0 = Functor0;
      this.apply = apply;
  };                      
  var apply = function (dict) {
      return dict.apply;
  };
  exports["Apply"] = Apply;
  exports["apply"] = apply;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.4
  "use strict";
  $PS["Control.Applicative"] = $PS["Control.Applicative"] || {};
  var exports = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];        
  var Applicative = function (Apply0, pure) {
      this.Apply0 = Apply0;
      this.pure = pure;
  };
  var pure = function (dict) {
      return dict.pure;
  };
  var liftA1 = function (dictApplicative) {
      return function (f) {
          return function (a) {
              return Control_Apply.apply(dictApplicative.Apply0())(pure(dictApplicative)(f))(a);
          };
      };
  };
  exports["Applicative"] = Applicative;
  exports["pure"] = pure;
  exports["liftA1"] = liftA1;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.4
  "use strict";
  $PS["Control.Bind"] = $PS["Control.Bind"] || {};
  var exports = $PS["Control.Bind"];
  var Bind = function (Apply0, bind) {
      this.Apply0 = Apply0;
      this.bind = bind;
  };                     
  var bind = function (dict) {
      return dict.bind;
  };
  exports["Bind"] = Bind;
  exports["bind"] = bind;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.4
  "use strict";
  $PS["Control.Semigroupoid"] = $PS["Control.Semigroupoid"] || {};
  var exports = $PS["Control.Semigroupoid"];
  var Semigroupoid = function (compose) {
      this.compose = compose;
  };
  var semigroupoidFn = new Semigroupoid(function (f) {
      return function (g) {
          return function (x) {
              return f(g(x));
          };
      };
  });
  var compose = function (dict) {
      return dict.compose;
  };
  exports["compose"] = compose;
  exports["semigroupoidFn"] = semigroupoidFn;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.4
  "use strict";
  $PS["Control.Category"] = $PS["Control.Category"] || {};
  var exports = $PS["Control.Category"];
  var Control_Semigroupoid = $PS["Control.Semigroupoid"];                
  var Category = function (Semigroupoid0, identity) {
      this.Semigroupoid0 = Semigroupoid0;
      this.identity = identity;
  };
  var identity = function (dict) {
      return dict.identity;
  };
  var categoryFn = new Category(function () {
      return Control_Semigroupoid.semigroupoidFn;
  }, function (x) {
      return x;
  });
  exports["identity"] = identity;
  exports["categoryFn"] = categoryFn;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.4
  "use strict";
  $PS["Control.Monad"] = $PS["Control.Monad"] || {};
  var exports = $PS["Control.Monad"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];                
  var Monad = function (Applicative0, Bind1) {
      this.Applicative0 = Applicative0;
      this.Bind1 = Bind1;
  };
  var ap = function (dictMonad) {
      return function (f) {
          return function (a) {
              return Control_Bind.bind(dictMonad.Bind1())(f)(function (v) {
                  return Control_Bind.bind(dictMonad.Bind1())(a)(function (v1) {
                      return Control_Applicative.pure(dictMonad.Applicative0())(v(v1));
                  });
              });
          };
      };
  };
  exports["Monad"] = Monad;
  exports["ap"] = ap;
})(PS);
(function(exports) {
  "use strict";

  exports.arrayMap = function (f) {
    return function (arr) {
      var l = arr.length;
      var result = new Array(l);
      for (var i = 0; i < l; i++) {
        result[i] = f(arr[i]);
      }
      return result;
    };
  };
})(PS["Data.Functor"] = PS["Data.Functor"] || {});
(function($PS) {
  // Generated by purs version 0.13.4
  "use strict";
  $PS["Data.Function"] = $PS["Data.Function"] || {};
  var exports = $PS["Data.Function"];
  var $$const = function (a) {
      return function (v) {
          return a;
      };
  };
  exports["const"] = $$const;
})(PS);
(function(exports) {
  "use strict";

  exports.unit = {};
})(PS["Data.Unit"] = PS["Data.Unit"] || {});
(function($PS) {
  // Generated by purs version 0.13.4
  "use strict";
  $PS["Data.Unit"] = $PS["Data.Unit"] || {};
  var exports = $PS["Data.Unit"];
  var $foreign = $PS["Data.Unit"];
  exports["unit"] = $foreign.unit;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.4
  "use strict";
  $PS["Data.Functor"] = $PS["Data.Functor"] || {};
  var exports = $PS["Data.Functor"];
  var $foreign = $PS["Data.Functor"];
  var Control_Semigroupoid = $PS["Control.Semigroupoid"];
  var Data_Function = $PS["Data.Function"];
  var Data_Unit = $PS["Data.Unit"];                
  var Functor = function (map) {
      this.map = map;
  };
  var map = function (dict) {
      return dict.map;
  };
  var $$void = function (dictFunctor) {
      return map(dictFunctor)(Data_Function["const"](Data_Unit.unit));
  };
  var functorFn = new Functor(Control_Semigroupoid.compose(Control_Semigroupoid.semigroupoidFn));
  var functorArray = new Functor($foreign.arrayMap);
  exports["Functor"] = Functor;
  exports["map"] = map;
  exports["void"] = $$void;
  exports["functorFn"] = functorFn;
  exports["functorArray"] = functorArray;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.4
  "use strict";
  $PS["Data.Maybe"] = $PS["Data.Maybe"] || {};
  var exports = $PS["Data.Maybe"];                 
  var Nothing = (function () {
      function Nothing() {

      };
      Nothing.value = new Nothing();
      return Nothing;
  })();
  var Just = (function () {
      function Just(value0) {
          this.value0 = value0;
      };
      Just.create = function (value0) {
          return new Just(value0);
      };
      return Just;
  })();
  var maybe = function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Nothing) {
                  return v;
              };
              if (v2 instanceof Just) {
                  return v1(v2.value0);
              };
              throw new Error("Failed pattern match at Data.Maybe (line 217, column 1 - line 217, column 51): " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  };
  var fromJust = function (dictPartial) {
      return function (v) {
          if (v instanceof Just) {
              return v.value0;
          };
          throw new Error("Failed pattern match at Data.Maybe (line 268, column 1 - line 268, column 46): " + [ v.constructor.name ]);
      };
  };
  exports["Nothing"] = Nothing;
  exports["Just"] = Just;
  exports["maybe"] = maybe;
  exports["fromJust"] = fromJust;
})(PS);
(function(exports) {
  "use strict";

  exports.pureE = function (a) {
    return function () {
      return a;
    };
  };

  exports.bindE = function (a) {
    return function (f) {
      return function () {
        return f(a())();
      };
    };
  };
})(PS["Effect"] = PS["Effect"] || {});
(function($PS) {
  // Generated by purs version 0.13.4
  "use strict";
  $PS["Effect"] = $PS["Effect"] || {};
  var exports = $PS["Effect"];
  var $foreign = $PS["Effect"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad = $PS["Control.Monad"];
  var Data_Functor = $PS["Data.Functor"];                    
  var monadEffect = new Control_Monad.Monad(function () {
      return applicativeEffect;
  }, function () {
      return bindEffect;
  });
  var bindEffect = new Control_Bind.Bind(function () {
      return applyEffect;
  }, $foreign.bindE);
  var applyEffect = new Control_Apply.Apply(function () {
      return functorEffect;
  }, Control_Monad.ap(monadEffect));
  var applicativeEffect = new Control_Applicative.Applicative(function () {
      return applyEffect;
  }, $foreign.pureE);
  var functorEffect = new Data_Functor.Functor(Control_Applicative.liftA1(applicativeEffect));
  exports["functorEffect"] = functorEffect;
})(PS);
(function(exports) {
  /* globals exports, JSON */
  "use strict";                                         
  exports.unsafeEncodeURIComponent = encodeURIComponent;
})(PS["Global.Unsafe"] = PS["Global.Unsafe"] || {});
(function($PS) {
  // Generated by purs version 0.13.4
  "use strict";
  $PS["Global.Unsafe"] = $PS["Global.Unsafe"] || {};
  var exports = $PS["Global.Unsafe"];
  var $foreign = $PS["Global.Unsafe"];
  exports["unsafeEncodeURIComponent"] = $foreign.unsafeEncodeURIComponent;
})(PS);
(function(exports) {
  "use strict";

  exports.createElement = function (localName) {
    return function (doc) {
      return function () {
        return doc.createElement(localName);
      };
    };
  };
})(PS["Web.DOM.Document"] = PS["Web.DOM.Document"] || {});
(function($PS) {
  // Generated by purs version 0.13.4
  "use strict";
  $PS["Web.DOM.Document"] = $PS["Web.DOM.Document"] || {};
  var exports = $PS["Web.DOM.Document"];
  var $foreign = $PS["Web.DOM.Document"];
  exports["createElement"] = $foreign.createElement;
})(PS);
(function(exports) {
  "use strict";

  exports.setAttribute = function (name) {
    return function (value) {
      return function (element) {
        return function () {
          element.setAttribute(name, value);
          return {};
        };
      };
    };
  };
})(PS["Web.DOM.Element"] = PS["Web.DOM.Element"] || {});
(function(exports) {
  "use strict";

  // module Unsafe.Coerce

  exports.unsafeCoerce = function (x) {
    return x;
  };
})(PS["Unsafe.Coerce"] = PS["Unsafe.Coerce"] || {});
(function($PS) {
  // Generated by purs version 0.13.4
  "use strict";
  $PS["Unsafe.Coerce"] = $PS["Unsafe.Coerce"] || {};
  var exports = $PS["Unsafe.Coerce"];
  var $foreign = $PS["Unsafe.Coerce"];
  exports["unsafeCoerce"] = $foreign.unsafeCoerce;
})(PS);
(function(exports) {
  "use strict";

  exports._unsafeReadProtoTagged = function (nothing, just, name, value) {
    if (typeof window !== "undefined") {
      var ty = window[name];
      if (ty != null && value instanceof ty) {
        return just(value);
      }
      return nothing;
    } 
    var obj = value;
    while (obj != null) {
      var proto = Object.getPrototypeOf(obj);
      var constructorName = proto.constructor.name;
      if (constructorName === name) {
        return just(value);
      } else if (constructorName === "Object") {
        return nothing;
      }
      obj = proto;
    }
    return nothing;
  };
})(PS["Web.Internal.FFI"] = PS["Web.Internal.FFI"] || {});
(function($PS) {
  // Generated by purs version 0.13.4
  "use strict";
  $PS["Web.Internal.FFI"] = $PS["Web.Internal.FFI"] || {};
  var exports = $PS["Web.Internal.FFI"];
  var $foreign = $PS["Web.Internal.FFI"];
  var Data_Maybe = $PS["Data.Maybe"];                
  var unsafeReadProtoTagged = function (name) {
      return function (value) {
          return $foreign["_unsafeReadProtoTagged"](Data_Maybe.Nothing.value, Data_Maybe.Just.create, name, value);
      };
  };
  exports["unsafeReadProtoTagged"] = unsafeReadProtoTagged;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.4
  "use strict";
  $PS["Web.DOM.Element"] = $PS["Web.DOM.Element"] || {};
  var exports = $PS["Web.DOM.Element"];
  var $foreign = $PS["Web.DOM.Element"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];
  var Web_Internal_FFI = $PS["Web.Internal.FFI"];             
  var toNode = Unsafe_Coerce.unsafeCoerce;
  var toEventTarget = Unsafe_Coerce.unsafeCoerce;                                      
  var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("Element");
  var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("Element");
  exports["fromNode"] = fromNode;
  exports["fromEventTarget"] = fromEventTarget;
  exports["toNode"] = toNode;
  exports["toEventTarget"] = toEventTarget;
  exports["setAttribute"] = $foreign.setAttribute;
})(PS);
(function(exports) {
  "use strict";

  exports.appendChild = function (node) {
    return function (parent) {
      return function () {
        return parent.appendChild(node);
      };
    };
  };
})(PS["Web.DOM.Node"] = PS["Web.DOM.Node"] || {});
(function($PS) {
  // Generated by purs version 0.13.4
  "use strict";
  $PS["Web.DOM.Node"] = $PS["Web.DOM.Node"] || {};
  var exports = $PS["Web.DOM.Node"];
  var $foreign = $PS["Web.DOM.Node"];
  exports["appendChild"] = $foreign.appendChild;
})(PS);
(function(exports) {
  "use strict";

  exports._target = function (e) {
    return e.target;
  };
})(PS["Web.Event.Event"] = PS["Web.Event.Event"] || {});
(function(exports) {
  "use strict";          

  exports.nullable = function (a, r, f) {
    return a == null ? r : f(a);
  };
})(PS["Data.Nullable"] = PS["Data.Nullable"] || {});
(function($PS) {
  // Generated by purs version 0.13.4
  "use strict";
  $PS["Data.Nullable"] = $PS["Data.Nullable"] || {};
  var exports = $PS["Data.Nullable"];
  var $foreign = $PS["Data.Nullable"];
  var Data_Maybe = $PS["Data.Maybe"];                                   
  var toMaybe = function (n) {
      return $foreign.nullable(n, Data_Maybe.Nothing.value, Data_Maybe.Just.create);
  };
  exports["toMaybe"] = toMaybe;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.4
  "use strict";
  $PS["Web.Event.Event"] = $PS["Web.Event.Event"] || {};
  var exports = $PS["Web.Event.Event"];
  var $foreign = $PS["Web.Event.Event"];
  var Data_Nullable = $PS["Data.Nullable"];
  var target = function ($4) {
      return Data_Nullable.toMaybe($foreign["_target"]($4));
  };
  exports["target"] = target;
})(PS);
(function(exports) {
  "use strict";

  exports.eventListener = function (fn) {
    return function () {
      return function (event) {
        return fn(event)();
      };
    };
  };

  exports.addEventListener = function (type) {
    return function (listener) {
      return function (useCapture) {
        return function (target) {
          return function () {
            return target.addEventListener(type, listener, useCapture);
          };
        };
      };
    };
  };
})(PS["Web.Event.EventTarget"] = PS["Web.Event.EventTarget"] || {});
(function($PS) {
  // Generated by purs version 0.13.4
  "use strict";
  $PS["Web.Event.EventTarget"] = $PS["Web.Event.EventTarget"] || {};
  var exports = $PS["Web.Event.EventTarget"];
  var $foreign = $PS["Web.Event.EventTarget"];
  exports["eventListener"] = $foreign.eventListener;
  exports["addEventListener"] = $foreign.addEventListener;
})(PS);
(function(exports) {
  /* global window */
  "use strict";

  exports.window = function () {
    return window;
  };
})(PS["Web.HTML"] = PS["Web.HTML"] || {});
(function($PS) {
  // Generated by purs version 0.13.4
  "use strict";
  $PS["Web.HTML"] = $PS["Web.HTML"] || {};
  var exports = $PS["Web.HTML"];
  var $foreign = $PS["Web.HTML"];
  exports["window"] = $foreign.window;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.4
  "use strict";
  $PS["Web.HTML.Event.EventTypes"] = $PS["Web.HTML.Event.EventTypes"] || {};
  var exports = $PS["Web.HTML.Event.EventTypes"];
  var click = "click";
  var change = "change";
  exports["change"] = change;
  exports["click"] = click;
})(PS);
(function(exports) {
  "use strict";

  exports._body = function (doc) {
    return function () {
      return doc.body;
    };
  };
})(PS["Web.HTML.HTMLDocument"] = PS["Web.HTML.HTMLDocument"] || {});
(function($PS) {
  // Generated by purs version 0.13.4
  "use strict";
  $PS["Web.HTML.HTMLDocument"] = $PS["Web.HTML.HTMLDocument"] || {};
  var exports = $PS["Web.HTML.HTMLDocument"];
  var $foreign = $PS["Web.HTML.HTMLDocument"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Nullable = $PS["Data.Nullable"];
  var Effect = $PS["Effect"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];      
  var toDocument = Unsafe_Coerce.unsafeCoerce;
  var body = (function () {
      var $8 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
      return function ($9) {
          return $8($foreign["_body"]($9));
      };
  })();
  exports["toDocument"] = toDocument;
  exports["body"] = body;
})(PS);
(function(exports) {
  "use strict";

  exports._read = function (nothing, just, value) {
    var tag = Object.prototype.toString.call(value);
    if (tag.indexOf("[object HTML") === 0 && tag.indexOf("Element]") === tag.length - 8) {
      return just(value);
    } else {
      return nothing;
    }
  };

  // ----------------------------------------------------------------------------

  exports.click = function (elt) {
    return function () {
      return elt.click();
    };
  };
})(PS["Web.HTML.HTMLElement"] = PS["Web.HTML.HTMLElement"] || {});
(function($PS) {
  // Generated by purs version 0.13.4
  "use strict";
  $PS["Web.HTML.HTMLElement"] = $PS["Web.HTML.HTMLElement"] || {};
  var exports = $PS["Web.HTML.HTMLElement"];
  var $foreign = $PS["Web.HTML.HTMLElement"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];                   
  var toNode = Unsafe_Coerce.unsafeCoerce;
  var fromNode = function (x) {
      return $foreign["_read"](Data_Maybe.Nothing.value, Data_Maybe.Just.create, x);
  };
  exports["fromNode"] = fromNode;
  exports["toNode"] = toNode;
  exports["click"] = $foreign.click;
})(PS);
(function(exports) {
  "use strict";

  // ----------------------------------------------------------------------------

  exports.value = function (input) {
    return function () {
      return input.value;
    };
  };
})(PS["Web.HTML.HTMLInputElement"] = PS["Web.HTML.HTMLInputElement"] || {});
(function($PS) {
  // Generated by purs version 0.13.4
  "use strict";
  $PS["Web.HTML.HTMLInputElement"] = $PS["Web.HTML.HTMLInputElement"] || {};
  var exports = $PS["Web.HTML.HTMLInputElement"];
  var $foreign = $PS["Web.HTML.HTMLInputElement"];
  var Web_Internal_FFI = $PS["Web.Internal.FFI"];                                  
  var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLInputElement");
  exports["fromElement"] = fromElement;
  exports["value"] = $foreign.value;
})(PS);
(function(exports) {
  "use strict";

  // ----------------------------------------------------------------------------

  exports.value = function (textarea) {
    return function () {
      return textarea.value;
    };
  };
})(PS["Web.HTML.HTMLTextAreaElement"] = PS["Web.HTML.HTMLTextAreaElement"] || {});
(function($PS) {
  // Generated by purs version 0.13.4
  "use strict";
  $PS["Web.HTML.HTMLTextAreaElement"] = $PS["Web.HTML.HTMLTextAreaElement"] || {};
  var exports = $PS["Web.HTML.HTMLTextAreaElement"];
  var $foreign = $PS["Web.HTML.HTMLTextAreaElement"];
  var Web_Internal_FFI = $PS["Web.Internal.FFI"];                                                  
  var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTextAreaElement");
  exports["fromNode"] = fromNode;
  exports["value"] = $foreign.value;
})(PS);
(function(exports) {
  "use strict";

  exports.document = function (window) {
    return function () {
      return window.document;
    };
  };
})(PS["Web.HTML.Window"] = PS["Web.HTML.Window"] || {});
(function($PS) {
  // Generated by purs version 0.13.4
  "use strict";
  $PS["Web.HTML.Window"] = $PS["Web.HTML.Window"] || {};
  var exports = $PS["Web.HTML.Window"];
  var $foreign = $PS["Web.HTML.Window"];
  exports["document"] = $foreign.document;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.4
  "use strict";
  $PS["DOM.Editor"] = $PS["DOM.Editor"] || {};
  var exports = $PS["DOM.Editor"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect = $PS["Effect"];
  var Global_Unsafe = $PS["Global.Unsafe"];
  var Web_DOM_Document = $PS["Web.DOM.Document"];
  var Web_DOM_Element = $PS["Web.DOM.Element"];
  var Web_DOM_Node = $PS["Web.DOM.Node"];
  var Web_Event_Event = $PS["Web.Event.Event"];
  var Web_Event_EventTarget = $PS["Web.Event.EventTarget"];
  var Web_HTML = $PS["Web.HTML"];
  var Web_HTML_Event_EventTypes = $PS["Web.HTML.Event.EventTypes"];
  var Web_HTML_HTMLDocument = $PS["Web.HTML.HTMLDocument"];
  var Web_HTML_HTMLElement = $PS["Web.HTML.HTMLElement"];
  var Web_HTML_HTMLInputElement = $PS["Web.HTML.HTMLInputElement"];
  var Web_HTML_HTMLTextAreaElement = $PS["Web.HTML.HTMLTextAreaElement"];
  var Web_HTML_Window = $PS["Web.HTML.Window"];
  var value = function (node) {
      return Web_HTML_HTMLTextAreaElement.value(Data_Maybe.fromJust()(Web_HTML_HTMLTextAreaElement.fromNode(node)));
  };
  var toNode = Web_DOM_Element.toNode;
  var setAttribute = function (key) {
      return function (val) {
          return function (node) {
              return Web_DOM_Element.setAttribute(key)(val)(Data_Maybe.fromJust()(Web_DOM_Element.fromNode(node)));
          };
      };
  };
  var inputedValueFromEvent = function (ev) {
      return Web_HTML_HTMLInputElement.value(Data_Maybe.fromJust()(Web_HTML_HTMLInputElement.fromElement(Data_Maybe.fromJust()(Web_DOM_Element.fromEventTarget(Data_Maybe.fromJust()(Web_Event_Event.target(ev)))))));
  };
  var fromEventTarget = function (target) {
      return Web_DOM_Element.toNode(Data_Maybe.fromJust()(Web_DOM_Element.fromEventTarget(target)));
  };
  var doClick = function (node) {
      return Web_HTML_HTMLElement.click(Data_Maybe.fromJust()(Web_HTML_HTMLElement.fromNode(node)));
  };
  var createElement = function (str) {
      return function (doc) {
          return Data_Functor.map(Effect.functorEffect)(Web_DOM_Element.toNode)(Web_DOM_Document.createElement(str)(doc));
      };
  };
  var click = Web_HTML_Event_EventTypes.click;
  var change = Web_HTML_Event_EventTypes.change;
  var appendChild = Web_DOM_Node.appendChild;
  var setup = function __do() {
      var v = Web_HTML.window();
      var v1 = Web_HTML_Window.document(v)();
      var document = Web_HTML_HTMLDocument.toDocument(v1);
      var v2 = Web_HTML_HTMLDocument.body(v1)();
      var bodyRaw = Data_Maybe.fromJust()(v2);
      var body = Web_HTML_HTMLElement.toNode(bodyRaw);
      var v3 = createElement("a")(document)();
      var v4 = appendChild(v3)(body)();
      var v5 = setAttribute("style")("display=\"none\"")(v3)();
      var saveText = function (textNode) {
          return function (nameOfFile) {
              return function (v6) {
                  return function __do() {
                      var v7 = value(textNode)();
                      var v8 = setAttribute("href")("data:text/plain;charset=utf-8," + Global_Unsafe.unsafeEncodeURIComponent(v7))(v3)();
                      var v9 = setAttribute("download")(nameOfFile)(v3)();
                      var v10 = doClick(v3)();
                      return Data_Unit.unit;
                  };
              };
          };
      };
      return {
          window: v,
          document: document,
          body: body,
          saveText: saveText
      };
  };
  var addEventListener = function (cb) {
      return function (ev) {
          return function (node) {
              return function __do() {
                  var v = Web_Event_EventTarget.eventListener(cb)();
                  var v1 = Web_Event_EventTarget.addEventListener(ev)(v)(false)(Web_DOM_Element.toEventTarget(Data_Maybe.fromJust()(Web_DOM_Element.fromNode(node))))();
                  return Data_Unit.unit;
              };
          };
      };
  };
  exports["addEventListener"] = addEventListener;
  exports["appendChild"] = appendChild;
  exports["change"] = change;
  exports["createElement"] = createElement;
  exports["inputedValueFromEvent"] = inputedValueFromEvent;
  exports["setup"] = setup;
})(PS);
(function(exports) {
  "use strict";

  var replicateFill = function (count) {
    return function (value) {
      if (count < 1) {
        return [];
      }
      var result = new Array(count);
      return result.fill(value);
    };
  };

  var replicatePolyfill = function (count) {
    return function (value) {
      var result = [];
      var n = 0;
      for (var i = 0; i < count; i++) {
        result[n++] = value;
      }
      return result;
    };
  };

  // In browsers that have Array.prototype.fill we use it, as it's faster.
  exports.replicate = typeof Array.prototype.fill === "function" ? replicateFill : replicatePolyfill;

  //------------------------------------------------------------------------------
  // Array size ------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.length = function (xs) {
    return xs.length;
  };

  //------------------------------------------------------------------------------
  // Indexed operations ----------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.indexImpl = function (just) {
    return function (nothing) {
      return function (xs) {
        return function (i) {
          return i < 0 || i >= xs.length ? nothing :  just(xs[i]);
        };
      };
    };
  };

  exports.findIndexImpl = function (just) {
    return function (nothing) {
      return function (f) {
        return function (xs) {
          for (var i = 0, l = xs.length; i < l; i++) {
            if (f(xs[i])) return just(i);
          }
          return nothing;
        };
      };
    };
  };

  exports._deleteAt = function (just) {
    return function (nothing) {
      return function (i) {
        return function (l) {
          if (i < 0 || i >= l.length) return nothing;
          var l1 = l.slice();
          l1.splice(i, 1);
          return just(l1);
        };
      };
    };
  };
})(PS["Data.Array"] = PS["Data.Array"] || {});
(function(exports) {
  "use strict";

  var refEq = function (r1) {
    return function (r2) {
      return r1 === r2;
    };
  };                            
  exports.eqIntImpl = refEq;
})(PS["Data.Eq"] = PS["Data.Eq"] || {});
(function($PS) {
  // Generated by purs version 0.13.4
  "use strict";
  $PS["Data.Eq"] = $PS["Data.Eq"] || {};
  var exports = $PS["Data.Eq"];
  var $foreign = $PS["Data.Eq"];
  var Eq = function (eq) {
      this.eq = eq;
  };                                           
  var eqInt = new Eq($foreign.eqIntImpl);
  var eq = function (dict) {
      return dict.eq;
  };
  exports["Eq"] = Eq;
  exports["eq"] = eq;
  exports["eqInt"] = eqInt;
})(PS);
(function(exports) {
  "use strict";

  exports.foldrArray = function (f) {
    return function (init) {
      return function (xs) {
        var acc = init;
        var len = xs.length;
        for (var i = len - 1; i >= 0; i--) {
          acc = f(xs[i])(acc);
        }
        return acc;
      };
    };
  };

  exports.foldlArray = function (f) {
    return function (init) {
      return function (xs) {
        var acc = init;
        var len = xs.length;
        for (var i = 0; i < len; i++) {
          acc = f(acc)(xs[i]);
        }
        return acc;
      };
    };
  };
})(PS["Data.Foldable"] = PS["Data.Foldable"] || {});
(function($PS) {
  // Generated by purs version 0.13.4
  "use strict";
  $PS["Data.Monoid"] = $PS["Data.Monoid"] || {};
  var exports = $PS["Data.Monoid"];
  var mempty = function (dict) {
      return dict.mempty;
  };
  exports["mempty"] = mempty;
})(PS);
(function(exports) {
  "use strict";

  exports.concatString = function (s1) {
    return function (s2) {
      return s1 + s2;
    };
  };
})(PS["Data.Semigroup"] = PS["Data.Semigroup"] || {});
(function($PS) {
  // Generated by purs version 0.13.4
  "use strict";
  $PS["Data.Semigroup"] = $PS["Data.Semigroup"] || {};
  var exports = $PS["Data.Semigroup"];
  var $foreign = $PS["Data.Semigroup"];
  var Semigroup = function (append) {
      this.append = append;
  }; 
  var semigroupString = new Semigroup($foreign.concatString);
  var append = function (dict) {
      return dict.append;
  };
  exports["append"] = append;
  exports["semigroupString"] = semigroupString;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.4
  "use strict";
  $PS["Data.Foldable"] = $PS["Data.Foldable"] || {};
  var exports = $PS["Data.Foldable"];
  var $foreign = $PS["Data.Foldable"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Semigroup = $PS["Data.Semigroup"];      
  var Foldable = function (foldMap, foldl, foldr) {
      this.foldMap = foldMap;
      this.foldl = foldl;
      this.foldr = foldr;
  };
  var foldr = function (dict) {
      return dict.foldr;
  }; 
  var foldMapDefaultR = function (dictFoldable) {
      return function (dictMonoid) {
          return function (f) {
              return foldr(dictFoldable)(function (x) {
                  return function (acc) {
                      return Data_Semigroup.append(dictMonoid.Semigroup0())(f(x))(acc);
                  };
              })(Data_Monoid.mempty(dictMonoid));
          };
      };
  };
  var foldableArray = new Foldable(function (dictMonoid) {
      return foldMapDefaultR(foldableArray)(dictMonoid);
  }, $foreign.foldlArray, $foreign.foldrArray);
  exports["foldr"] = foldr;
  exports["foldableArray"] = foldableArray;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.4
  "use strict";
  $PS["Data.Array"] = $PS["Data.Array"] || {};
  var exports = $PS["Data.Array"];
  var $foreign = $PS["Data.Array"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Maybe = $PS["Data.Maybe"];
  var index = $foreign.indexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var last = function (xs) {
      return index(xs)($foreign.length(xs) - 1 | 0);
  };
  var findIndex = $foreign.findIndexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var deleteAt = $foreign["_deleteAt"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var deleteBy = function (v) {
      return function (v1) {
          return function (v2) {
              if (v2.length === 0) {
                  return [  ];
              };
              return Data_Maybe.maybe(v2)(function (i) {
                  return Data_Maybe.fromJust()(deleteAt(i)(v2));
              })(findIndex(v(v1))(v2));
          };
      };
  };
  var $$delete = function (dictEq) {
      return deleteBy(Data_Eq.eq(dictEq));
  };
  var difference = function (dictEq) {
      return Data_Foldable.foldr(Data_Foldable.foldableArray)($$delete(dictEq));
  };
  exports["last"] = last;
  exports["index"] = index;
  exports["difference"] = difference;
  exports["replicate"] = $foreign.replicate;
  exports["length"] = $foreign.length;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.4
  "use strict";
  $PS["Data.Boolean"] = $PS["Data.Boolean"] || {};
  var exports = $PS["Data.Boolean"];
  var otherwise = true;
  exports["otherwise"] = otherwise;
})(PS);
(function(exports) {
  "use strict";

  exports.intSub = function (x) {
    return function (y) {
      /* jshint bitwise: false */
      return x - y | 0;
    };
  };
})(PS["Data.Ring"] = PS["Data.Ring"] || {});
(function(exports) {
  "use strict";

  exports.intAdd = function (x) {
    return function (y) {
      /* jshint bitwise: false */
      return x + y | 0;
    };
  };

  exports.intMul = function (x) {
    return function (y) {
      /* jshint bitwise: false */
      return x * y | 0;
    };
  };
})(PS["Data.Semiring"] = PS["Data.Semiring"] || {});
(function($PS) {
  // Generated by purs version 0.13.4
  "use strict";
  $PS["Data.Semiring"] = $PS["Data.Semiring"] || {};
  var exports = $PS["Data.Semiring"];
  var $foreign = $PS["Data.Semiring"];
  var Semiring = function (add, mul, one, zero) {
      this.add = add;
      this.mul = mul;
      this.one = one;
      this.zero = zero;
  };
  var zero = function (dict) {
      return dict.zero;
  };                                                                            
  var semiringInt = new Semiring($foreign.intAdd, $foreign.intMul, 1, 0);
  var one = function (dict) {
      return dict.one;
  };
  var mul = function (dict) {
      return dict.mul;
  };
  var add = function (dict) {
      return dict.add;
  };
  exports["Semiring"] = Semiring;
  exports["add"] = add;
  exports["zero"] = zero;
  exports["mul"] = mul;
  exports["one"] = one;
  exports["semiringInt"] = semiringInt;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.4
  "use strict";
  $PS["Data.Ring"] = $PS["Data.Ring"] || {};
  var exports = $PS["Data.Ring"];
  var $foreign = $PS["Data.Ring"];
  var Data_Semiring = $PS["Data.Semiring"];
  var Ring = function (Semiring0, sub) {
      this.Semiring0 = Semiring0;
      this.sub = sub;
  };
  var sub = function (dict) {
      return dict.sub;
  };                  
  var ringInt = new Ring(function () {
      return Data_Semiring.semiringInt;
  }, $foreign.intSub);
  var negate = function (dictRing) {
      return function (a) {
          return sub(dictRing)(Data_Semiring.zero(dictRing.Semiring0()))(a);
      };
  };
  exports["Ring"] = Ring;
  exports["sub"] = sub;
  exports["negate"] = negate;
  exports["ringInt"] = ringInt;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.4
  "use strict";
  $PS["Data.CommutativeRing"] = $PS["Data.CommutativeRing"] || {};
  var exports = $PS["Data.CommutativeRing"];
  var Data_Ring = $PS["Data.Ring"];
  var CommutativeRing = function (Ring0) {
      this.Ring0 = Ring0;
  }; 
  var commutativeRingInt = new CommutativeRing(function () {
      return Data_Ring.ringInt;
  });
  exports["CommutativeRing"] = CommutativeRing;
  exports["commutativeRingInt"] = commutativeRingInt;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.4
  "use strict";
  $PS["Data.DivisionRing"] = $PS["Data.DivisionRing"] || {};
  var exports = $PS["Data.DivisionRing"];                  
  var DivisionRing = function (Ring0, recip) {
      this.Ring0 = Ring0;
      this.recip = recip;
  };
  var recip = function (dict) {
      return dict.recip;
  };
  exports["DivisionRing"] = DivisionRing;
  exports["recip"] = recip;
})(PS);
(function(exports) {
  "use strict";

  exports.intDegree = function (x) {
    return Math.min(Math.abs(x), 2147483647);
  };

  // See the Euclidean definition in
  // https://en.m.wikipedia.org/wiki/Modulo_operation.
  exports.intDiv = function (x) {
    return function (y) {
      if (y === 0) return 0;
      return y > 0 ? Math.floor(x / y) : -Math.floor(x / -y);
    };
  };

  exports.intMod = function (x) {
    return function (y) {
      if (y === 0) return 0;
      var yy = Math.abs(y);
      return ((x % yy) + yy) % yy;
    };
  };
})(PS["Data.EuclideanRing"] = PS["Data.EuclideanRing"] || {});
(function($PS) {
  // Generated by purs version 0.13.4
  "use strict";
  $PS["Data.EuclideanRing"] = $PS["Data.EuclideanRing"] || {};
  var exports = $PS["Data.EuclideanRing"];
  var $foreign = $PS["Data.EuclideanRing"];
  var Data_CommutativeRing = $PS["Data.CommutativeRing"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Semiring = $PS["Data.Semiring"];                
  var EuclideanRing = function (CommutativeRing0, degree, div, mod) {
      this.CommutativeRing0 = CommutativeRing0;
      this.degree = degree;
      this.div = div;
      this.mod = mod;
  };
  var mod = function (dict) {
      return dict.mod;
  };
  var gcd = function ($copy_dictEq) {
      return function ($copy_dictEuclideanRing) {
          return function ($copy_a) {
              return function ($copy_b) {
                  var $tco_var_dictEq = $copy_dictEq;
                  var $tco_var_dictEuclideanRing = $copy_dictEuclideanRing;
                  var $tco_var_a = $copy_a;
                  var $tco_done = false;
                  var $tco_result;
                  function $tco_loop(dictEq, dictEuclideanRing, a, b) {
                      var $7 = Data_Eq.eq(dictEq)(b)(Data_Semiring.zero(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0()));
                      if ($7) {
                          $tco_done = true;
                          return a;
                      };
                      $tco_var_dictEq = dictEq;
                      $tco_var_dictEuclideanRing = dictEuclideanRing;
                      $tco_var_a = b;
                      $copy_b = mod(dictEuclideanRing)(a)(b);
                      return;
                  };
                  while (!$tco_done) {
                      $tco_result = $tco_loop($tco_var_dictEq, $tco_var_dictEuclideanRing, $tco_var_a, $copy_b);
                  };
                  return $tco_result;
              };
          };
      };
  }; 
  var euclideanRingInt = new EuclideanRing(function () {
      return Data_CommutativeRing.commutativeRingInt;
  }, $foreign.intDegree, $foreign.intDiv, $foreign.intMod);
  var div = function (dict) {
      return dict.div;
  };
  var lcm = function (dictEq) {
      return function (dictEuclideanRing) {
          return function (a) {
              return function (b) {
                  var $8 = Data_Eq.eq(dictEq)(a)(Data_Semiring.zero(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0())) || Data_Eq.eq(dictEq)(b)(Data_Semiring.zero(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0()));
                  if ($8) {
                      return Data_Semiring.zero(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0());
                  };
                  return div(dictEuclideanRing)(Data_Semiring.mul(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0())(a)(b))(gcd(dictEq)(dictEuclideanRing)(a)(b));
              };
          };
      };
  };
  exports["EuclideanRing"] = EuclideanRing;
  exports["div"] = div;
  exports["mod"] = mod;
  exports["gcd"] = gcd;
  exports["lcm"] = lcm;
  exports["euclideanRingInt"] = euclideanRingInt;
})(PS);
(function(exports) {
  "use strict";

  var unsafeCompareImpl = function (lt) {
    return function (eq) {
      return function (gt) {
        return function (x) {
          return function (y) {
            return x < y ? lt : x === y ? eq : gt;
          };
        };
      };
    };
  };                                         
  exports.ordIntImpl = unsafeCompareImpl;
})(PS["Data.Ord"] = PS["Data.Ord"] || {});
(function($PS) {
  // Generated by purs version 0.13.4
  "use strict";
  $PS["Data.Ordering"] = $PS["Data.Ordering"] || {};
  var exports = $PS["Data.Ordering"];              
  var LT = (function () {
      function LT() {

      };
      LT.value = new LT();
      return LT;
  })();
  var GT = (function () {
      function GT() {

      };
      GT.value = new GT();
      return GT;
  })();
  var EQ = (function () {
      function EQ() {

      };
      EQ.value = new EQ();
      return EQ;
  })();
  exports["LT"] = LT;
  exports["GT"] = GT;
  exports["EQ"] = EQ;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.4
  "use strict";
  $PS["Data.Ord"] = $PS["Data.Ord"] || {};
  var exports = $PS["Data.Ord"];
  var $foreign = $PS["Data.Ord"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Ordering = $PS["Data.Ordering"];
  var Data_Ring = $PS["Data.Ring"];
  var Data_Semiring = $PS["Data.Semiring"];
  var Ord = function (Eq0, compare) {
      this.Eq0 = Eq0;
      this.compare = compare;
  };                                                                                                 
  var ordInt = new Ord(function () {
      return Data_Eq.eqInt;
  }, $foreign.ordIntImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value));
  var compare = function (dict) {
      return dict.compare;
  };
  var greaterThanOrEq = function (dictOrd) {
      return function (a1) {
          return function (a2) {
              var v = compare(dictOrd)(a1)(a2);
              if (v instanceof Data_Ordering.LT) {
                  return false;
              };
              return true;
          };
      };
  };
  var lessThan = function (dictOrd) {
      return function (a1) {
          return function (a2) {
              var v = compare(dictOrd)(a1)(a2);
              if (v instanceof Data_Ordering.LT) {
                  return true;
              };
              return false;
          };
      };
  };
  var abs = function (dictOrd) {
      return function (dictRing) {
          return function (x) {
              var $53 = greaterThanOrEq(dictOrd)(x)(Data_Semiring.zero(dictRing.Semiring0()));
              if ($53) {
                  return x;
              };
              return Data_Ring.negate(dictRing)(x);
          };
      };
  };
  exports["Ord"] = Ord;
  exports["lessThan"] = lessThan;
  exports["abs"] = abs;
  exports["ordInt"] = ordInt;
})(PS);
(function(exports) {
  "use strict";

  exports.showIntImpl = function (n) {
    return n.toString();
  };
})(PS["Data.Show"] = PS["Data.Show"] || {});
(function($PS) {
  // Generated by purs version 0.13.4
  "use strict";
  $PS["Data.Show"] = $PS["Data.Show"] || {};
  var exports = $PS["Data.Show"];
  var $foreign = $PS["Data.Show"];
  var Show = function (show) {
      this.show = show;
  };                                                 
  var showInt = new Show($foreign.showIntImpl);
  var show = function (dict) {
      return dict.show;
  };
  exports["Show"] = Show;
  exports["show"] = show;
  exports["showInt"] = showInt;
})(PS);
(function(exports) {
  "use strict";

  // jshint maxparams: 3

  exports.traverseArrayImpl = function () {
    function array1(a) {
      return [a];
    }

    function array2(a) {
      return function (b) {
        return [a, b];
      };
    }

    function array3(a) {
      return function (b) {
        return function (c) {
          return [a, b, c];
        };
      };
    }

    function concat2(xs) {
      return function (ys) {
        return xs.concat(ys);
      };
    }

    return function (apply) {
      return function (map) {
        return function (pure) {
          return function (f) {
            return function (array) {
              function go(bot, top) {
                switch (top - bot) {
                case 0: return pure([]);
                case 1: return map(array1)(f(array[bot]));
                case 2: return apply(map(array2)(f(array[bot])))(f(array[bot + 1]));
                case 3: return apply(apply(map(array3)(f(array[bot])))(f(array[bot + 1])))(f(array[bot + 2]));
                default:
                  // This slightly tricky pivot selection aims to produce two
                  // even-length partitions where possible.
                  var pivot = bot + Math.floor((top - bot) / 4) * 2;
                  return apply(map(concat2)(go(bot, pivot)))(go(pivot, top));
                }
              }
              return go(0, array.length);
            };
          };
        };
      };
    };
  }();
})(PS["Data.Traversable"] = PS["Data.Traversable"] || {});
(function($PS) {
  // Generated by purs version 0.13.4
  "use strict";
  $PS["Data.Traversable.Accum.Internal"] = $PS["Data.Traversable.Accum.Internal"] || {};
  var exports = $PS["Data.Traversable.Accum.Internal"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Data_Functor = $PS["Data.Functor"];
  var stateL = function (v) {
      return v;
  }; 
  var functorStateL = new Data_Functor.Functor(function (f) {
      return function (k) {
          return function (s) {
              var v = stateL(k)(s);
              return {
                  accum: v.accum,
                  value: f(v.value)
              };
          };
      };
  });
  var applyStateL = new Control_Apply.Apply(function () {
      return functorStateL;
  }, function (f) {
      return function (x) {
          return function (s) {
              var v = stateL(f)(s);
              var v1 = stateL(x)(v.accum);
              return {
                  accum: v1.accum,
                  value: v.value(v1.value)
              };
          };
      };
  });
  var applicativeStateL = new Control_Applicative.Applicative(function () {
      return applyStateL;
  }, function (a) {
      return function (s) {
          return {
              accum: s,
              value: a
          };
      };
  });
  exports["stateL"] = stateL;
  exports["applicativeStateL"] = applicativeStateL;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.4
  "use strict";
  $PS["Data.Traversable"] = $PS["Data.Traversable"] || {};
  var exports = $PS["Data.Traversable"];
  var $foreign = $PS["Data.Traversable"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Category = $PS["Control.Category"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Traversable_Accum_Internal = $PS["Data.Traversable.Accum.Internal"];                
  var Traversable = function (Foldable1, Functor0, sequence, traverse) {
      this.Foldable1 = Foldable1;
      this.Functor0 = Functor0;
      this.sequence = sequence;
      this.traverse = traverse;
  };
  var traverse = function (dict) {
      return dict.traverse;
  }; 
  var sequenceDefault = function (dictTraversable) {
      return function (dictApplicative) {
          return traverse(dictTraversable)(dictApplicative)(Control_Category.identity(Control_Category.categoryFn));
      };
  };
  var traversableArray = new Traversable(function () {
      return Data_Foldable.foldableArray;
  }, function () {
      return Data_Functor.functorArray;
  }, function (dictApplicative) {
      return sequenceDefault(traversableArray)(dictApplicative);
  }, function (dictApplicative) {
      return $foreign.traverseArrayImpl(Control_Apply.apply(dictApplicative.Apply0()))(Data_Functor.map((dictApplicative.Apply0()).Functor0()))(Control_Applicative.pure(dictApplicative));
  });
  var mapAccumL = function (dictTraversable) {
      return function (f) {
          return function (s0) {
              return function (xs) {
                  return Data_Traversable_Accum_Internal.stateL(traverse(dictTraversable)(Data_Traversable_Accum_Internal.applicativeStateL)(function (a) {
                      return function (s) {
                          return f(s)(a);
                      };
                  })(xs))(s0);
              };
          };
      };
  };
  var scanl = function (dictTraversable) {
      return function (f) {
          return function (b0) {
              return function (xs) {
                  return (mapAccumL(dictTraversable)(function (b) {
                      return function (a) {
                          var b$prime = f(b)(a);
                          return {
                              accum: b$prime,
                              value: b$prime
                          };
                      };
                  })(b0)(xs)).value;
              };
          };
      };
  };
  exports["scanl"] = scanl;
  exports["traversableArray"] = traversableArray;
})(PS);
(function(exports) {
  
  exports.setTitle = function (name){
    return function(){
      document.querySelector("h1")
              .textContent = name;
    };
  };

  exports.render = function (content){
      return function(){
        let node = document.createElement("label");
        document.querySelector("#description")
                .appendChild(node);
        katex.render(content,node);
      };
  };

  exports.equation = function (content){
      return function(){
        let node = document.createElement("label");
        node.setAttribute("class","center");
        document.querySelector("#description")
                .appendChild(node);
        katex.render(content,node);
      };
  };

  exports.raw = function (content){
      return function(){
        let node = document.createTextNode(content);
        document.querySelector("#description")
                .appendChild(node);
      };
  };

  exports.newLine = function (){
    return function (){
    let node = document.createElement("br");
    document.querySelector("#description")
            .appendChild(node);
            };
  };  


  exports.list = function(xs){
    return function(){
      let node = document.createElement("ul");
      xs.forEach(x => {
        let elem = document.createElement("li");
        node.appendChild(elem);
        x(elem);
        });
     document.querySelector("#description")
             .appendChild(node);
    }
  };

  exports.cat = function(xs){
      return function(parent){
     xs.forEach(x => x(parent));
    };
  };

  exports.subraw = function (content){
    return function (parent){
        parent.appendChild(document.createTextNode(content));
    };
  };
})(PS["KaTeX"] = PS["KaTeX"] || {});
(function($PS) {
  // Generated by purs version 0.13.4
  "use strict";
  $PS["KaTeX"] = $PS["KaTeX"] || {};
  var exports = $PS["KaTeX"];
  var $foreign = $PS["KaTeX"];
  var Data_Unit = $PS["Data.Unit"];
  var newline = $foreign.newLine(Data_Unit.unit);
  exports["newline"] = newline;
  exports["cat"] = $foreign.cat;
  exports["equation"] = $foreign.equation;
  exports["list"] = $foreign.list;
  exports["raw"] = $foreign.raw;
  exports["render"] = $foreign.render;
  exports["setTitle"] = $foreign.setTitle;
  exports["subraw"] = $foreign.subraw;
})(PS);
(function(exports) {
  exports.fromString = function (str){
    return str;
  };
})(PS["Main"] = PS["Main"] || {});
(function($PS) {
  // Generated by purs version 0.13.4
  "use strict";
  $PS["Main"] = $PS["Main"] || {};
  var exports = $PS["Main"];
  var $foreign = $PS["Main"];
  var Control_Category = $PS["Control.Category"];
  var Control_Semigroupoid = $PS["Control.Semigroupoid"];
  var DOM_Editor = $PS["DOM.Editor"];
  var Data_Array = $PS["Data.Array"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_CommutativeRing = $PS["Data.CommutativeRing"];
  var Data_DivisionRing = $PS["Data.DivisionRing"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_EuclideanRing = $PS["Data.EuclideanRing"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Ordering = $PS["Data.Ordering"];
  var Data_Ring = $PS["Data.Ring"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Semiring = $PS["Data.Semiring"];
  var Data_Show = $PS["Data.Show"];
  var Data_Traversable = $PS["Data.Traversable"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect = $PS["Effect"];
  var KaTeX = $PS["KaTeX"];                
  var Fraction = function (x) {
      return x;
  };
  var spacex = function (n) {
      return Data_Foldable.foldr(Data_Foldable.foldableArray)(Data_Semigroup.append(Data_Semigroup.semigroupString))("")(Data_Array.replicate(n)("\\;"));
  };
  var showFraction = new Data_Show.Show(function (v) {
      var $40 = v.den === 1;
      if ($40) {
          return Data_Show.show(Data_Show.showInt)(v.num);
      };
      return "\\frac{" + (Data_Show.show(Data_Show.showInt)(v.num) + ("}{" + (Data_Show.show(Data_Show.showInt)(v.den) + "}")));
  });
  var semiRingFraction = new Data_Semiring.Semiring(function (v) {
      return function (v1) {
          var n = (v.num * v1.den | 0) + (v1.num * v.den | 0) | 0;
          var d = v.den * v1.den | 0;
          var g = Data_EuclideanRing.gcd(Data_Eq.eqInt)(Data_EuclideanRing.euclideanRingInt)(Data_Ord.abs(Data_Ord.ordInt)(Data_Ring.ringInt)(n))(d);
          return {
              num: Data_EuclideanRing.div(Data_EuclideanRing.euclideanRingInt)(n)(g),
              den: Data_EuclideanRing.div(Data_EuclideanRing.euclideanRingInt)(d)(g)
          };
      };
  }, function (v) {
      return function (v1) {
          var n = v.num * v1.num | 0;
          var d = v.den * v1.den | 0;
          var g = Data_EuclideanRing.gcd(Data_Eq.eqInt)(Data_EuclideanRing.euclideanRingInt)(Data_Ord.abs(Data_Ord.ordInt)(Data_Ring.ringInt)(n))(d);
          return {
              num: Data_EuclideanRing.div(Data_EuclideanRing.euclideanRingInt)(n)(g),
              den: Data_EuclideanRing.div(Data_EuclideanRing.euclideanRingInt)(d)(g)
          };
      };
  }, {
      num: 1,
      den: 1
  }, {
      num: 0,
      den: 1
  });
  var primes = [ 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 5, 5, 5, 5 ];
  var middle = function (nn) {
      var n3$prime = Data_EuclideanRing.mod(Data_EuclideanRing.euclideanRingInt)(nn)(1000000);
      var n3 = nn - (Data_EuclideanRing.div(Data_EuclideanRing.euclideanRingInt)(nn - n3$prime | 0)(1000000) * 1000000 | 0) | 0;
      var n0 = Data_EuclideanRing.mod(Data_EuclideanRing.euclideanRingInt)(nn)(100);
      return Data_EuclideanRing.div(Data_EuclideanRing.euclideanRingInt)(n3 - n0 | 0)(100);
  };
  var rand = function (v) {
      return {
          val: middle(Data_EuclideanRing.mod(Data_EuclideanRing.euclideanRingInt)((v.val * v.val | 0) + v.gen | 0)(100000000)),
          gen: Data_EuclideanRing.mod(Data_EuclideanRing.euclideanRingInt)(v.gen + v.seed | 0)(100000000),
          seed: v.seed
      };
  };
  var lift = function (n) {
      return {
          num: n,
          den: 1
      };
  };
  var ringFraction = new Data_Ring.Ring(function () {
      return semiRingFraction;
  }, function (f1) {
      return function (f2) {
          return Data_Semiring.add(semiRingFraction)(f1)(Data_Semiring.mul(semiRingFraction)(lift(-1 | 0))(f2));
      };
  });
  var eqFraction = new Data_Eq.Eq(function (v) {
      return function (v1) {
          return v.num === 0 && v1.num === 0 || v.num === v1.num && v.den === v1.den;
      };
  });
  var ordFraction = new Data_Ord.Ord(function () {
      return eqFraction;
  }, function (f1) {
      return function (f2) {
          var v = Data_Ring.sub(ringFraction)(f1)(f2);
          if (v.num < 0) {
              return Data_Ordering.LT.value;
          };
          if (v.num > 0) {
              return Data_Ordering.GT.value;
          };
          if (Data_Boolean.otherwise) {
              return Data_Ordering.EQ.value;
          };
          throw new Error("Failed pattern match at Main (line 76, column 9 - line 79, column 36): " + [ Data_Unit.unit.constructor.name ]);
      };
  });
  var divisionRingFraction = new Data_DivisionRing.DivisionRing(function () {
      return ringFraction;
  }, function (v) {
      var $54 = v.num < 0;
      if ($54) {
          return {
              num: -v.den | 0,
              den: -v.num | 0
          };
      };
      return {
          num: v.den,
          den: v.num
      };
  });
  var delta = function (a) {
      return function (b) {
          return function (c) {
              return Data_Ring.sub(ringFraction)(Data_Semiring.mul(semiRingFraction)(b)(b))(Data_Semiring.mul(semiRingFraction)(Data_Semiring.mul(semiRingFraction)(lift(4))(a))(c));
          };
      };
  };
  var commutativeRingFraction = new Data_CommutativeRing.CommutativeRing(function () {
      return ringFraction;
  });
  var euclideanRingFraction = new Data_EuclideanRing.EuclideanRing(function () {
      return commutativeRingFraction;
  }, Data_Function["const"](1), function (f1) {
      return function (f2) {
          return Data_Semiring.mul(semiRingFraction)(f1)(Data_DivisionRing.recip(divisionRingFraction)(f2));
      };
  }, function (v) {
      return function (v1) {
          return Data_Semiring.zero(semiRingFraction);
      };
  });
  var avgNbFactors = 2;
  var randFraction = function (r) {
      var r0 = rand(r);
      var r1 = rand(r0);
      var nbNumFactors = 1 + Data_EuclideanRing.mod(Data_EuclideanRing.euclideanRingInt)(r0.val)(avgNbFactors) | 0;
      var nrands = Data_Functor.map(Data_Functor.functorArray)(function (f) {
          return f(r1);
      })(Data_Traversable.scanl(Data_Traversable.traversableArray)(Control_Semigroupoid.compose(Control_Semigroupoid.semigroupoidFn))(Control_Category.identity(Control_Category.categoryFn))(Data_Array.replicate(nbNumFactors)(rand)));
      var nbDenFactors = 1 + Data_EuclideanRing.mod(Data_EuclideanRing.euclideanRingInt)(r1.val)(avgNbFactors) | 0;
      var v = Data_Array.last(nrands);
      if (v instanceof Data_Maybe.Just) {
          var drands = Data_Functor.map(Data_Functor.functorArray)(function (f) {
              return f(v.value0);
          })(Data_Traversable.scanl(Data_Traversable.traversableArray)(Control_Semigroupoid.compose(Control_Semigroupoid.semigroupoidFn))(Control_Category.identity(Control_Category.categoryFn))(Data_Array.replicate(nbDenFactors)(rand)));
          var v1 = Data_Array.last(drands);
          if (v1 instanceof Data_Maybe.Just) {
              var prime = function (ix) {
                  return Data_Maybe.fromJust()(Data_Array.index(primes)(ix));
              };
              var nums = Data_Functor.map(Data_Functor.functorArray)(Data_Functor.map(Data_Functor.functorFn)(prime)(function (rnd) {
                  return Data_EuclideanRing.mod(Data_EuclideanRing.euclideanRingInt)(rnd.val)(Data_Array.length(primes));
              }))(nrands);
              var nextRand = rand(v1.value0);
              var sign = (2 * Data_EuclideanRing.mod(Data_EuclideanRing.euclideanRingInt)(nextRand.val)(2) | 0) - 1 | 0;
              var dens = Data_Functor.map(Data_Functor.functorArray)(Data_Functor.map(Data_Functor.functorFn)(prime)(function (rnd) {
                  return Data_EuclideanRing.mod(Data_EuclideanRing.euclideanRingInt)(rnd.val)(Data_Array.length(primes));
              }))(drands);
              var num = Data_Foldable.foldr(Data_Foldable.foldableArray)(Data_Semiring.mul(Data_Semiring.semiringInt))(1)(Data_Array.difference(Data_Eq.eqInt)(nums)(dens));
              var den = Data_Foldable.foldr(Data_Foldable.foldableArray)(Data_Semiring.mul(Data_Semiring.semiringInt))(1)(Data_Array.difference(Data_Eq.eqInt)(dens)(nums));
              var $57 = num > den;
              if ($57) {
                  return {
                      fraction: {
                          num: sign * num | 0,
                          den: den
                      },
                      nextRand: nextRand
                  };
              };
              return {
                  fraction: {
                      num: sign * den | 0,
                      den: num
                  },
                  nextRand: nextRand
              };
          };
          throw new Error("Failed pattern match at Main (line 123, column 7 - line 123, column 28): " + [ v1.constructor.name ]);
      };
      throw new Error("Failed pattern match at Main (line 120, column 7 - line 120, column 28): " + [ v.constructor.name ]);
  };
  var alpha = function (a) {
      return function (b) {
          return function (c) {
              return Data_EuclideanRing.div(euclideanRingFraction)(Data_EuclideanRing.div(euclideanRingFraction)(Data_Ring.negate(ringFraction)(b))(a))(lift(2));
          };
      };
  };
  var beta = function (a) {
      return function (b) {
          return function (c) {
              var f = function (x) {
                  return Data_Semiring.add(semiRingFraction)(Data_Semiring.add(semiRingFraction)(Data_Semiring.mul(semiRingFraction)(Data_Semiring.mul(semiRingFraction)(a)(x))(x))(Data_Semiring.mul(semiRingFraction)(b)(x)))(c);
              };
              var al = alpha(a)(b)(c);
              return f(al);
          };
      };
  };
  var abs = function (v) {
      return {
          num: Data_Ord.abs(Data_Ord.ordInt)(Data_Ring.ringInt)(v.num),
          den: v.den
      };
  };
  var inline = function (c) {
      if (Data_Ord.lessThan(ordFraction)(c)(Data_Semiring.zero(semiRingFraction))) {
          return "-" + Data_Show.show(showFraction)(abs(c));
      };
      if (Data_Eq.eq(eqFraction)(c)(Data_Semiring.zero(semiRingFraction))) {
          return "";
      };
      if (Data_Boolean.otherwise) {
          return "+" + Data_Show.show(showFraction)(c);
      };
      throw new Error("Failed pattern match at Main (line 51, column 3 - line 54, column 41): " + [ Data_Unit.unit.constructor.name ]);
  };
  var showTrinom = function (a) {
      return function (b) {
          return function (c) {
              var m2 = (function () {
                  if (Data_Eq.eq(eqFraction)(a)(Data_Ring.negate(ringFraction)(Data_Semiring.one(semiRingFraction)))) {
                      return "-x^2";
                  };
                  if (Data_Eq.eq(eqFraction)(a)(Data_Semiring.one(semiRingFraction))) {
                      return "x^2";
                  };
                  if (Data_Boolean.otherwise) {
                      return Data_Show.show(showFraction)(a) + "x^2";
                  };
                  throw new Error("Failed pattern match at Main (line 36, column 9 - line 39, column 49): " + [ Data_Unit.unit.constructor.name ]);
              })();
              var m1 = (function () {
                  if (Data_Eq.eq(eqFraction)(b)(Data_Ring.negate(ringFraction)(Data_Semiring.one(semiRingFraction)))) {
                      return "-x";
                  };
                  if (Data_Ord.lessThan(ordFraction)(b)(Data_Semiring.zero(semiRingFraction))) {
                      return "-" + (Data_Show.show(showFraction)(abs(b)) + "x");
                  };
                  if (Data_Eq.eq(eqFraction)(b)(Data_Semiring.zero(semiRingFraction))) {
                      return "";
                  };
                  if (Data_Eq.eq(eqFraction)(b)(Data_Semiring.one(semiRingFraction))) {
                      return "+x";
                  };
                  if (Data_Boolean.otherwise) {
                      return "+" + (Data_Show.show(showFraction)(b) + "x");
                  };
                  throw new Error("Failed pattern match at Main (line 41, column 9 - line 46, column 54): " + [ Data_Unit.unit.constructor.name ]);
              })();
              return m2 + (m1 + inline(c));
          };
      };
  };
  var cb = function (doc) {
      return function (ev) {
          return function __do() {
              var v = DOM_Editor.inputedValueFromEvent(ev)();
              var odd = (2 * Data_Ord.abs(Data_Ord.ordInt)(Data_Ring.ringInt)($foreign.fromString(v)) | 0) + 1 | 0;
              var r0 = {
                  val: odd,
                  gen: 0,
                  seed: odd * odd | 0
              };
              KaTeX.newline();
              KaTeX.list([ KaTeX.cat([ KaTeX.subraw("5 questions") ]), KaTeX.cat([ KaTeX.subraw("1 point par bonne r\xe9ponse") ]), KaTeX.cat([ KaTeX.subraw("toute valeur num\xe9rique "), KaTeX.subraw("\xe0 donner sous forme enti\xe8re "), KaTeX.subraw("ou rationnelle irr\xe9ductible") ]), KaTeX.cat([ KaTeX.subraw("calculatrice autoris\xe9e") ]) ])();
              KaTeX.newline();
              KaTeX.raw("1) Deux nombres ")();
              KaTeX.render("x_1")();
              KaTeX.raw(" et ")();
              KaTeX.render("x_2")();
              KaTeX.raw(" v\xe9rifient ")();
              var f1 = randFraction(r0);
              var f2 = randFraction(f1.nextRand);
              KaTeX.render("\\left\\{\\begin{array}{l}x_1+x_2=" + (Data_Show.show(showFraction)(Data_Semiring.add(semiRingFraction)(f1.fraction)(f2.fraction)) + ("\\\\ x_1x_2 = " + (Data_Show.show(showFraction)(Data_Semiring.mul(semiRingFraction)(f1.fraction)(f2.fraction)) + "\\end{array}\\right."))))();
              KaTeX.newline();
              KaTeX.raw("Donner l'ensemble des couples ")();
              KaTeX.render("(x_1, x_2)")();
              KaTeX.raw(" possibles:")();
              KaTeX.newline();
              KaTeX.newline();
              KaTeX.newline();
              KaTeX.raw("2) Soit ")();
              KaTeX.render("f")();
              KaTeX.raw(" la fonction polyn\xf4me du second degr\xe9 d\xe9finie par ")();
              var f3 = randFraction(f2.nextRand);
              var f4 = randFraction(f3.nextRand);
              var f5 = randFraction(f4.nextRand);
              KaTeX.render("f(x)=" + showTrinom(f3.fraction)(f4.fraction)(f5.fraction))();
              KaTeX.raw(" pour tout ")();
              KaTeX.render("x\\in\\mathbb{R}")();
              KaTeX.raw(". ")();
              KaTeX.newline();
              KaTeX.raw("Donner la forme canonique de ")();
              KaTeX.render("f")();
              KaTeX.raw(" :")();
              KaTeX.newline();
              KaTeX.newline();
              KaTeX.newline();
              KaTeX.newline();
              KaTeX.raw("3) Calculer le discriminant de ")();
              var f6 = randFraction(f5.nextRand);
              var f7 = randFraction(f6.nextRand);
              var f8 = randFraction(f7.nextRand);
              var l3 = Data_EuclideanRing.lcm(Data_Eq.eqInt)(Data_EuclideanRing.euclideanRingInt)(f6.fraction.den)(Data_EuclideanRing.lcm(Data_Eq.eqInt)(Data_EuclideanRing.euclideanRingInt)(f7.fraction.den)(f8.fraction.den));
              var v1 = Data_Semiring.mul(semiRingFraction)(lift(l3))(f6.fraction);
              var v2 = Data_Semiring.mul(semiRingFraction)(lift(l3))(f7.fraction);
              var v3 = Data_Semiring.mul(semiRingFraction)(lift(l3))(f8.fraction);
              var g3 = Data_EuclideanRing.gcd(Data_Eq.eqInt)(Data_EuclideanRing.euclideanRingInt)(Data_Ord.abs(Data_Ord.ordInt)(Data_Ring.ringInt)(v1.num))(Data_EuclideanRing.gcd(Data_Eq.eqInt)(Data_EuclideanRing.euclideanRingInt)(Data_Ord.abs(Data_Ord.ordInt)(Data_Ring.ringInt)(v2.num))(Data_Ord.abs(Data_Ord.ordInt)(Data_Ring.ringInt)(v3.num)));
              KaTeX.render(showTrinom(Data_EuclideanRing.div(euclideanRingFraction)(v1)(lift(g3)))(Data_EuclideanRing.div(euclideanRingFraction)(v2)(lift(g3)))(Data_EuclideanRing.div(euclideanRingFraction)(v3)(lift(g3))))();
              KaTeX.raw(".")();
              KaTeX.newline();
              KaTeX.raw("En d\xe9duire le nombre de solutions r\xe9elles de l'\xe9quation ")();
              KaTeX.equation((function () {
                  var $73 = Data_Eq.eq(eqFraction)(f6.fraction)(Data_EuclideanRing.div(euclideanRingFraction)(v1)(lift(g3)));
                  if ($73) {
                      return showTrinom(Data_EuclideanRing.div(euclideanRingFraction)(f6.fraction)(lift(-2 | 0)))(Data_EuclideanRing.div(euclideanRingFraction)(f7.fraction)(lift(-2 | 0)))(Data_EuclideanRing.div(euclideanRingFraction)(f8.fraction)(lift(-2 | 0)));
                  };
                  return showTrinom(f6.fraction)(f7.fraction)(f8.fraction);
              })() + "=0")();
              KaTeX.raw("On donnera la valeur du discriminant ")();
              KaTeX.raw("ainsi que le nombre de solutions.")();
              KaTeX.newline();
              KaTeX.raw("M\xeame s'il y a des solutions, on ne demande pas de calculer leur valeur:")();
              KaTeX.newline();
              KaTeX.newline();
              KaTeX.newline();
              KaTeX.newline();
              KaTeX.raw("4) R\xe9soudre dans ")();
              KaTeX.render("\\mathbb{R}:")();
              var f9 = randFraction(f8.nextRand);
              var f10 = randFraction(f9.nextRand);
              var f11 = randFraction(f10.nextRand);
              var v4 = Data_Semiring.mul(semiRingFraction)(Data_Ring.negate(ringFraction)(f9.fraction))(Data_Semiring.add(semiRingFraction)(f10.fraction)(f11.fraction));
              var v5 = Data_Semiring.mul(semiRingFraction)(Data_Semiring.mul(semiRingFraction)(f9.fraction)(f10.fraction))(f11.fraction);
              var l4 = Data_EuclideanRing.lcm(Data_Eq.eqInt)(Data_EuclideanRing.euclideanRingInt)(f9.fraction.den)(Data_EuclideanRing.lcm(Data_Eq.eqInt)(Data_EuclideanRing.euclideanRingInt)(v4.den)(v5.den));
              var v6 = Data_Semiring.mul(semiRingFraction)(lift(l4))(f9.fraction);
              var v7 = Data_Semiring.mul(semiRingFraction)(lift(l4))(v4);
              var v8 = Data_Semiring.mul(semiRingFraction)(lift(l4))(v5);
              var g4 = Data_EuclideanRing.gcd(Data_Eq.eqInt)(Data_EuclideanRing.euclideanRingInt)(Data_Ord.abs(Data_Ord.ordInt)(Data_Ring.ringInt)(v6.num))(Data_EuclideanRing.gcd(Data_Eq.eqInt)(Data_EuclideanRing.euclideanRingInt)(Data_Ord.abs(Data_Ord.ordInt)(Data_Ring.ringInt)(v7.num))(Data_Ord.abs(Data_Ord.ordInt)(Data_Ring.ringInt)(v8.num)));
              KaTeX.equation(showTrinom(Data_EuclideanRing.div(euclideanRingFraction)(v6)(lift(g4)))(Data_EuclideanRing.div(euclideanRingFraction)(v7)(lift(g4)))(Data_EuclideanRing.div(euclideanRingFraction)(v8)(lift(g4))) + "=0")();
              KaTeX.newline();
              KaTeX.newline();
              KaTeX.newline();
              KaTeX.newline();
              KaTeX.raw("5) Soit ")();
              KaTeX.render("f")();
              KaTeX.raw(" la fonction d\xe9finie sur ")();
              KaTeX.render("\\mathbb{R}")();
              KaTeX.raw(" par ")();
              var f12 = randFraction(f11.nextRand);
              var f13 = randFraction(f12.nextRand);
              KaTeX.render("f(x)=" + (showTrinom(f12.fraction)(f13.fraction)(Data_Semiring.zero(semiRingFraction)) + "+c"))();
              KaTeX.raw(" o\xf9 ")();
              KaTeX.render("c")();
              KaTeX.raw(" est un nombre r\xe9el.")();
              KaTeX.newline();
              KaTeX.raw("D\xe9terminer la valeur de ")();
              KaTeX.render("c")();
              KaTeX.raw(" pour laquelle ")();
              KaTeX.render("f")();
              KaTeX.raw(" admet une unique racine (on dit aussi racine \"double\") ")();
              KaTeX.render("x_0")();
              KaTeX.raw(", puis calculer ")();
              KaTeX.render("x_0")();
              KaTeX.raw(":")();
              KaTeX.newline();
              KaTeX.newline();
              KaTeX.newline();
              KaTeX.newline();
              var sol4 = (function () {
                  var $80 = Data_Eq.eq(eqFraction)(f10.fraction)(f11.fraction);
                  if ($80) {
                      return "\\{" + (Data_Show.show(showFraction)(f10.fraction) + "\\}");
                  };
                  return "\\{" + (Data_Show.show(showFraction)(f10.fraction) + ("," + (Data_Show.show(showFraction)(f11.fraction) + "\\}")));
              })();
              var delta3 = delta(Data_EuclideanRing.div(euclideanRingFraction)(v1)(lift(g3)))(Data_EuclideanRing.div(euclideanRingFraction)(v2)(lift(g3)))(Data_EuclideanRing.div(euclideanRingFraction)(v3)(lift(g3)));
              var nbsol3 = (function () {
                  if (Data_Ord.lessThan(ordFraction)(delta3)(Data_Semiring.zero(semiRingFraction))) {
                      return "pas\\;de\\; solution";
                  };
                  if (Data_Eq.eq(eqFraction)(delta3)(Data_Semiring.zero(semiRingFraction))) {
                      return "unique\\; solution";
                  };
                  if (Data_Boolean.otherwise) {
                      return "deux\\; solutions\\; distinctes";
                  };
                  throw new Error("Failed pattern match at Main (line 309, column 16 - line 312, column 74): " + [ Data_Unit.unit.constructor.name ]);
              })();
              var beta2 = beta(f3.fraction)(f4.fraction)(f5.fraction);
              var alpha2 = alpha(f3.fraction)(f4.fraction)(f5.fraction);
              var rep = [ "r\xe9ponses: 1)", "\\mathcal{S}=" + (function () {
                  var $82 = Data_Eq.eq(eqFraction)(f1.fraction)(f2.fraction);
                  if ($82) {
                      return "\\{(" + (Data_Show.show(showFraction)(f1.fraction) + ("," + (Data_Show.show(showFraction)(f2.fraction) + ")\\}")));
                  };
                  return "\\{(" + (Data_Show.show(showFraction)(f1.fraction) + ("," + (Data_Show.show(showFraction)(f2.fraction) + ("),(" + (Data_Show.show(showFraction)(f2.fraction) + ("," + (Data_Show.show(showFraction)(f1.fraction) + ")\\}")))))));
              })(), "\\; 2) ", "f(x)=" + (Data_Show.show(showFraction)(f3.fraction) + ("(x" + (inline(Data_Ring.negate(ringFraction)(alpha2)) + (")^2" + inline(beta2))))), "\\; 3)\\Delta =" + (Data_Show.show(showFraction)(delta3) + (",\\; " + nbsol3)), "\\; 4)\\mathcal{S}=" + sol4, "\\; 5)", "c=", Data_Show.show(showFraction)(Data_EuclideanRing.div(euclideanRingFraction)(Data_EuclideanRing.div(euclideanRingFraction)(Data_Semiring.mul(semiRingFraction)(f13.fraction)(f13.fraction))(f12.fraction))(lift(4))), "\\; x_0=", Data_Show.show(showFraction)(Data_EuclideanRing.div(euclideanRingFraction)(Data_EuclideanRing.div(euclideanRingFraction)(Data_Ring.negate(ringFraction)(f13.fraction))(f12.fraction))(lift(2))) ];
              return KaTeX.render((function () {
                  var $83 = $foreign.fromString(v) < 0;
                  if ($83) {
                      return Data_Foldable.foldr(Data_Foldable.foldableArray)(Data_Semigroup.append(Data_Semigroup.semigroupString))("")(rep);
                  };
                  return "";
              })())();
          };
      };
  };
  var main = Data_Functor["void"](Effect.functorEffect)(function __do() {
      var v = DOM_Editor.setup();
      var v1 = DOM_Editor.createElement("input")(v.document)();
      var v2 = DOM_Editor.addEventListener(cb(v.document))(DOM_Editor.change)(v1)();
      var v3 = DOM_Editor.appendChild(v1)(v.body)();
      KaTeX.setTitle("Devoir 2 : Second degr\xe9")();
      KaTeX.raw("Nom:")();
      KaTeX.render(spacex(40))();
      KaTeX.raw("Pr\xe9nom:")();
      KaTeX.render(spacex(40))();
      KaTeX.raw("Classe:")();
      return Data_Unit.unit;
  });
  var aVeryBigPowerOf2 = 33554432;
  exports["primes"] = primes;
  exports["avgNbFactors"] = avgNbFactors;
  exports["Fraction"] = Fraction;
  exports["showTrinom"] = showTrinom;
  exports["inline"] = inline;
  exports["abs"] = abs;
  exports["lift"] = lift;
  exports["alpha"] = alpha;
  exports["beta"] = beta;
  exports["delta"] = delta;
  exports["randFraction"] = randFraction;
  exports["aVeryBigPowerOf2"] = aVeryBigPowerOf2;
  exports["middle"] = middle;
  exports["rand"] = rand;
  exports["cb"] = cb;
  exports["spacex"] = spacex;
  exports["main"] = main;
  exports["eqFraction"] = eqFraction;
  exports["showFraction"] = showFraction;
  exports["semiRingFraction"] = semiRingFraction;
  exports["ringFraction"] = ringFraction;
  exports["ordFraction"] = ordFraction;
  exports["divisionRingFraction"] = divisionRingFraction;
  exports["commutativeRingFraction"] = commutativeRingFraction;
  exports["euclideanRingFraction"] = euclideanRingFraction;
  exports["fromString"] = $foreign.fromString;
})(PS);
PS["Main"].main();